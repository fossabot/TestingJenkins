default_platform(:ios)

platform :ios do

# Run this before doing anything else
before_all do

  # If the GIT status is not clean, abort. We won't want to include junk in the build
  ensure_git_status_clean

end

# After all the steps have completed succesfully, run this.
after_all do |lane|

  # Remove all build artifacts, but keep mobileprovisioning profiles since they are stored in GIT
  clean_build_artifacts(
    exclude_pattern: ".*\.mobileprovision"
  )

  # Reset all changes to the git checkout
  reset_git_repo(
    force: true
  )

end

# If there was an error, run this
error do |lane, exception|

  # Remove all build artifacts, but keep mobileprovisioning profiles since they are stored in GIT
  clean_build_artifacts(
    exclude_pattern: ".*\.mobileprovision"
  )

  # Reset all changes to the git checkout
  reset_git_repo(
    force: true
  )

end
private_lane :build_app do |options|

  # This part is done only when the app is not for the "production" environment
  # Update the app name
  app_name(
    plist_path: "#{options[:project_name]}/Info.plist",
    app_name: options[:TestApp]
  )

  # Update the app identifier
  update_app_identifier(
    xcodeproj: "#{options[TestApp]}.xcodeproj",
    plist_path: "#{options[TestApp]}/Info.plist",
    app_identifier: options[com.ripl.TestApp]
  )

  # Install the certificate
  import_certificate(
    certificate_path: options[:certificate_path],
    certificate_password: options[:certificate_password],
    keychain_name: "login.keychain"
  )

  # Install the provisioning profile
  update_project_provisioning(
    xcodeproj: "#{options[TestApp]}.xcodeproj",
    profile: options[:profile]
  )

  # Version bump
  increment_build_number(
    build_number: options[:build_number]
  )

  # Build the app
  gym(
    scheme: "#{options[:scheme]}",
    configuration: options[:configuration],
    provisioning_profile_path: options[:profile],
    codesigning_identity: options[:codesigning_identity],
    export_method: options[:export_method]
  )

end
# Publish to Hockeyapp
private_lane :publish_hockey do |options|

  # Generate a changelog with GIT since the last successful build in Jenkins
  changelog = sh("git log --graph --pretty=format:'%h -%d %s <%an>' --abbrev-commit #{ENV['GIT_PREVIOUS_SUCCESSFUL_COMMIT'] || 'HEAD^^^^^'}..HEAD")

  # Send the app to Hockeyapp (fill in your API token!)
  hockey(
    api_token: "527f548c67894ad3a230e7f6e650d1d6",
    notes: "#{changelog.to_s}",
    release_type: options[:beta]
  )
end
end
